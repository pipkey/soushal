{"version":3,"sources":["components/FormsControls/FormControllers.module.css","utills/validators/validators.ts","components/FormsControls/FormsConrollers.tsx","HOC/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusHOOKS.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","required","value","maxLengthCreator","maxValue","length","FormControl","meta","touched","error","children","hasError","className","style","formControl","Textarea","props","input","restProps","Input","CreateField","placeholder","component","name","validate","text","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","val","currentTarget","updateStatus","onBlur","autoFocus","onDoubleClick","ProfileInfo","profile","ss","deskTopBlock","src","photos","large","alt","aboutMe","fullName","Preloader","Post","item","ava","message","hart","likeCounts","maxLength30","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","MyPosts","postElement","posts","map","post","key","id","postsBlock","addPost","MyPostsContainer","profilePage","postsDate","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getStatus","React","compose","withRouter"],"mappings":"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","file":"static/js/4.e3918886.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControllers_formControl__27bVB\",\"error\":\"FormControllers_error__3ZDvI\",\"formSummaryError\":\"FormControllers_formSummaryError__2bRMd\"};","export const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n};\r\nexport const maxLengthCreator= (maxValue:number) =>  (value: string) => {\r\n    if (value.length > maxValue) return `Max length is ${maxValue} symbols`;\r\n    return undefined\r\n};","import React, {Component} from \"react\"\r\nimport style from \"./FormControllers.module.css\"\r\nimport {required} from \"../../utills/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\nimport {string} from \"prop-types\";\r\n\r\ntype MyTextareaType = {\r\n    input: any\r\n    meta: any\r\n    child: any\r\n}\r\n\r\nconst FormControl: React.FC<MyTextareaType> = ({meta: {touched,error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const Textarea: React.FC<MyTextareaType> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...restProps} {...input}/> </FormControl>\r\n};\r\n\r\nexport const Input: React.FC<MyTextareaType> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...restProps} {...input}/> </FormControl>\r\n};\r\n\r\ntype placeholderType = string | null\r\ntype PropsType = typeType | null\r\ntype typeType ={type: string}\r\ntype textType = string | null\r\n\r\nexport const CreateField = (placeholder: placeholderType, component: any, name: string, validate: any, props:PropsType , text?:textType) => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                component={component}\r\n                name={name}\r\n                validate={validate}\r\n                {...props}\r\n            /> {text}\r\n        </div>)\r\n};","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppRootStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props;\r\n         if (!isAuth) return <Redirect to=\"/login\"/>;\r\n        return <Component {...restProps as T}/>\r\n    };\r\n\r\n\r\n    // const ConectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    // return ConectedRedirectComponent\r\n    return  connect(mapStateToProps)(RedirectComponent);\r\n\r\n\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__RlLWc\",\"main\":\"ProfileInfo_main__2297l\",\"deskTopBlock\":\"ProfileInfo_deskTopBlock__3Rds8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__7yfxy\",\"postsBlock\":\"MyPosts_postsBlock__2zra7\",\"posts\":\"MyPosts_posts__11D2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2Abpk\",\"ava\":\"Post_ava__2xWXm\",\"hart\":\"Post_hart__qiVMk\"};","import React, {useEffect, useState} from \"react\";\r\n\r\ntype ProfileStatusType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatusWithHooks = (props: ProfileStatusType) => {\r\n\r\n     const [editMode,setEditMode] = useState<boolean>(false);\r\n     const [status,setStatus] = useState<string>(props.status);\r\n\r\n     useEffect(()=>{\r\n         setStatus(props.status)\r\n     },[props.status]);\r\n\r\n\r\n     const ActiveEM = () =>{\r\n         setEditMode(true)\r\n     };\r\n     const onBlurEM = () =>{\r\n         setEditMode(false)\r\n     };\r\n\r\n     const onChangeStatus =(e: React.ChangeEvent<HTMLInputElement>)=> {\r\n       let val = e.currentTarget.value;\r\n         setStatus(val);\r\n         props.updateStatus(val)\r\n     };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <input\r\n                    onChange={onChangeStatus}\r\n                     onBlur={onBlurEM}\r\n                    value={status}\r\n                    autoFocus={true}\r\n                />\r\n                : <span\r\n                     onDoubleClick={ActiveEM}\r\n                >\r\n                    {props.status}\r\n            </span>\r\n            }\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport ss from \"./ProfileInfo.module.css\"\r\nimport {ProfileType} from \"../ProfileContainer\";\r\nimport {Preloader} from \"../../Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusHOOKS\";\r\n\r\ntype ProfileinfoType ={\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props:ProfileinfoType) => {\r\nif(!props.profile){\r\n   return <Preloader/>\r\n}\r\n\r\n    return (\r\n        <div >\r\n            {/*<img  className={ss.main} src=\"https://i0.wp.com/www.courthousenews.com/wp-content/uploads/2017/09/White-tiger.jpg\" />*/}\r\n\r\n            <div className={ss.deskTopBlock}>\r\n                <img src={props.profile.photos? props.profile.photos.large : \"\"} alt=\"photo\"/>\r\n\r\n                <ProfileStatusWithHooks\r\n                    status={props.status}\r\n                    updateStatus={props.updateStatus}\r\n                />\r\n\r\n                <h4>{props.profile.aboutMe}</h4>\r\n                <hr/>\r\n                <h2>{props.profile.fullName}</h2>\r\n                <hr/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport ss from \"./Post.module.css\"\r\n\r\n\r\ntype PostPropsType={\r\n    message: string\r\n    likeCounts: number\r\n}\r\n\r\nconst Post= (props:PostPropsType ) => {\r\n    return (\r\n        <div className={ss.item}>\r\n            <img className={ss.ava} src=\"https://static.wixstatic.com/media/79c9822b89594184828440001e15fc21.jpg/v1/fill/w_640,h_560,al_c,q_80,usm_0.66_1.00_0.01/79c9822b89594184828440001e15fc21.webp\" />\r\n            {props.message}\r\n            <div>\r\n                <span className={ss.hart}>Like</span> {props.likeCounts}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Post;","import React from \"react\";\r\nimport ss from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\"\r\nimport {PostType} from \"../../../redux/store\"\r\nimport  {Field,InjectedFormProps} from \"redux-form\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utills/validators/validators\";\r\nimport {Textarea} from \"../../FormsControls/FormsConrollers\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: (post:string) => void\r\n    posts: Array<PostType>\r\n}\r\n\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n\r\n    let postElement = props.posts.map(post =>\r\n        <Post key={post.id} message={post.message} likeCounts={post.likeCounts}\r\n        />);\r\n\r\n    const AddPost = (value:AddPostFormType) => {\r\n        props.addPost(value.post)\r\n    };\r\n\r\n    return (\r\n        <div className={ss.postsBlock}>\r\n            <h3>My Posts </h3>\r\n\r\n                <AddPostReduxForm onSubmit={AddPost}/>\r\n\r\n            <div className={ss.posts}>\r\n                {postElement}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\ntype AddPostFormType = {\r\n    post: string\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\n\r\nconst AddPostForm: React.FC<InjectedFormProps<AddPostFormType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"post\"}\r\n                   component={Textarea}\r\n                   placeholder={\"send your post\"}\r\n                   validate={[\r\n                       required,\r\n                       maxLength30,\r\n                   ]}\r\n            />\r\n\r\n            <button>Add post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm<AddPostFormType>({form: \"addPost\"})(AddPostForm);\r\n\r\n\r\nexport default MyPosts;","import {PostType} from \"../../../redux/store\"\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport {AppRootStateType} from \"../../../redux/redux-store\";\r\n\r\n//type\r\ntype MapStateProType = {\r\n     posts:Array<PostType>\r\n}\r\n//end type\r\n\r\n//functions\r\nlet mapStateToProps = (state: AppRootStateType): MapStateProType => {\r\n    return {\r\n        posts: state.profilePage.postsDate\r\n    }\r\n};\r\n\r\n//end functions\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"./ProfileContainer\";\r\n\r\n\r\ntype ProfilePType = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nexport const Profile = (props: ProfilePType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}/>\r\n\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\n","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\n\r\n\r\n//start types\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype ProfileContainerType = {\r\n    getUserProfile: (id: string) => void\r\n    getStatus: (id: string) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype mapPapType = {\r\n    profile: ProfileType,\r\n    status: string\r\n    authorizedUserId: any\r\n    isAuth: boolean\r\n}\r\n\r\ntype OwnPropsType = mapPapType & ProfileContainerType\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: string,\r\n    photos: PhotoProfileType\r\n}\r\ntype ContactsType = {\r\n    facebook: string,\r\n    website: null,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: null,\r\n    github: string,\r\n    mainLink: null\r\n}\r\ntype PhotoProfileType = {\r\n    small: string,\r\n    large: string\r\n}\r\ntype UserURLPropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\n//end types\r\n\r\n\r\nclass ProfileContainer extends React.Component<UserURLPropsType> {\r\n    componentDidMount(): void {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile = {this.props.profile}\r\n                     status = {this.props.status}\r\n                     updateStatus = {this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): mapPapType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// let WithURLDataContainerComponent = withRouter(ProfileContainer);\r\n// export default withAuthRedirect( connect(mapStateToProps, {getUserProfile})(WithURLDataContainerComponent));\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), withRouter, withAuthRedirect)(ProfileContainer)"],"sourceRoot":""}