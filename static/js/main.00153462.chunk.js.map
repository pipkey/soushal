{"version":3,"sources":["serviceWorker.ts","redux/app-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Navbar/Music/Music.tsx","components/Navbar/News/News.tsx","components/Navbar/Settings/Settings.tsx","components/Navbar/Friends/Friends.tsx","components/Heder/Header.tsx","components/Heder/HeaderContainer.tsx","HOC/withSuspense.tsx","App.tsx","index.tsx","redux/auth-reducer.ts","components/Preloader/Preloader.tsx","components/Heder/Header.module.css","redux/profile-reducer.ts","components/Navbar/Navbar.module.css","assets/images/grid.svg","api/api.ts","redux/dialog-reducer.ts","redux/store.ts","utills/Helper.ts","redux/users-reducer.ts"],"names":["Boolean","window","location","hostname","match","initialState","initializedSuc","appReducer","state","action","type","reducers","combineReducers","profilePage","profileReducer","messagePage","dialogReducer","usersPage","usersReducer","auth","authReducer","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","NavBar","className","ss","nav","item","to","activeClassName","active","Music","News","Settings","Friends","Header","props","header","src","alt","loginBlock","isAuth","login","onClick","LogOutThunk","HeaderContainer","this","React","Component","connect","WithSuspense","Suspense","fallback","Preloader","ProfileContainer","lazy","UsersContainer","Login","DialogsContainer","App","initializeApp","path","render","component","withRouter","dispatch","setDataUserThunk","then","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","id","email","setUserData","payload","a","headerAPI","setDataUser","response","data","resultCode","LoginThunk","formData","res","messages","length","stopSubmit","_error","logOut","load","module","exports","InitialState","postsDate","likeCounts","profile","status","addPost","post","setUserStatus","getUserProfile","profileAPI","setUserProfile","getStatus","updateStatus","filter","p","ResultCodes","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","UnFollowUsers","delete","FollowUsers","put","NewMessage","newMessage","dialogsDate","name","img","messageDate","helperObj","items","itemId","objPropName","newOdjProps","map","u","users","totalItemsCount","isFetching","followingInProgress","followSucsess","userId","unFollowSucsess","setCurrentPage","toogleIsFetching","toogleIsFollowing","totalCount","followUnfollowFlow","apiMethod","actionCreator","Success","unFollow","bind","follow","followed"],"mappings":"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","file":"static/js/main.00153462.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"./redux-store\";\r\nimport {setDataUserThunk} from \"./auth-reducer\";\r\n\r\n\r\n// AC type bind\r\nexport const SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\n\r\n//Profile Action Types\r\nexport type AuthActionType =\r\n    ReturnType<typeof initializedSuccess>\r\n\r\n\r\n//types\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, AuthActionType>\r\nexport type AppInitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    initializedSuc: false\r\n};\r\n\r\n\r\nconst appReducer = (state: AppInitialStateType = initialState, action: AuthActionType) => {\r\n\r\n    switch (action.type) {\r\n        case  SET_INITIALIZED : {\r\n            return {...state, initializedSuc: true}\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n// Action Creators\r\nexport const initializedSuccess = () => ({type: SET_INITIALIZED} as const);\r\n\r\n\r\n//thunk\r\nexport const initializeApp = ():ThunkType => (dispatch) => {\r\n    let promise = dispatch(setDataUserThunk());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess())\r\n    });\r\n};\r\n\r\nexport default appReducer;","import { applyMiddleware, combineReducers, createStore, Action, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport { reducer as formReducer } from \"redux-form\"\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagePage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducers>\r\n//thunk\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppRootStateType, unknown, A>\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport ss from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <nav className={ss.nav}>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/profile\" activeClassName={ss.active}>Profile</NavLink>\r\n            </div>\r\n            <hr/>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={ss.active}>Messages</NavLink>\r\n            </div>\r\n            <hr/>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/news\" activeClassName={ss.active}>News</NavLink>\r\n            </div>\r\n            <hr/>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/music\" activeClassName={ss.active}>Music</NavLink>\r\n            </div>\r\n            <hr/>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/users\" activeClassName={ss.active}>Users</NavLink>\r\n            </div>\r\n            <hr/>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/settings\" activeClassName={ss.active}>Settings</NavLink>\r\n            </div>\r\n            <hr/>\r\n            <div className={ss.item}>\r\n                <NavLink to=\"/friends\" activeClassName={ss.active}>Friends</NavLink>\r\n            </div>\r\n            <hr/>\r\n\r\n        </nav>\r\n    )\r\n};\r\n\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport ss from \"./Music.module.css\"\r\n\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Music;","import React from \"react\";\r\nimport ss from \"./News.module.css\"\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default News;","import React from \"react\";\r\nimport ss from \"./Settings.module.css\"\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\n\r\nconst Friends =()=> {\r\n    return(\r\n        <div>\r\n            1,2,3\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Friends;","import React from \"react\";\r\nimport ss from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    LogOutThunk: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <header className={ss.header}>\r\n            <img src=\"https://image.freepik.com/free-vector/tiger-mascot-logo-sport_27088-333.jpg\"  alt=\"icon\"/>\r\n            <div className={ss.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.LogOutThunk}> Log Out</button></div>\r\n                    : <NavLink to={\"/login\"}> Login </NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {LogOutThunk} from \"../../redux/auth-reducer\";\r\nimport {AppRootStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n}\r\n\r\ntype OWNtypes = AuthCallBack & mapStateToPropsType\r\n\r\n\r\nconst mapStateToProps =(state:AppRootStateType): mapStateToPropsType =>({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\ntype AuthCallBack ={\r\n    LogOutThunk: () => void\r\n}\r\n\r\nclass HeaderContainer  extends React.Component<OWNtypes> {\r\n\r\n\r\n    render() {\r\n      return <Header {...this.props} isAuth={this.props.isAuth} LogOutThunk={this.props.LogOutThunk}  login={this.props.login}/> ;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { LogOutThunk })(HeaderContainer);","import React from \"react\";\r\nimport { Preloader } from \"../components/Preloader/Preloader\";\r\n\r\nfunction WithSuspense (Component: any) {\r\n  return (props:any) => (\r\n    <React.Suspense\r\n      fallback = { <Preloader/> }>\r\n        <Component {...props } />\r\n    </React.Suspense>\r\n  )\r\n};\r\n\r\nexport default WithSuspense;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar/Navbar\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport Music from \"./components/Navbar/Music/Music\";\nimport News from \"./components/Navbar/News/News\";\nimport Settings from \"./components/Navbar/Settings/Settings\";\nimport Friends from \"./components/Navbar/Friends/Friends\";\n// import UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Heder/HeaderContainer\";\n// import Login from \"./components/Login/Login\";\n// import DialogsContainer from \"./components/Navbar/Dialogs/DialogsContainer\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app-reducer\";\nimport { AppRootStateType } from \"./redux/redux-store\";\nimport { Preloader } from \"./components/Preloader/Preloader\";\nimport WithSuspense from \"./HOC/withSuspense\";\n\nconst ProfileContainer = React.lazy(\n  () => import(\"./components/Profile/ProfileContainer\")\n);\nconst UsersContainer = React.lazy(\n  () => import(\"./components/Users/UsersContainer\")\n);\nconst Login = React.lazy(() => import(\"./components/Login/Login\"));\nconst DialogsContainer = React.lazy(\n  () => import(\"./components/Navbar/Dialogs/DialogsContainer\")\n);\n\ntype AppType = {\n  initializeApp: () => void;\n  initializedSuc: boolean;\n};\ntype mapStateType = {\n  initializedSuc: boolean;\n};\n\nclass App extends React.Component<AppType> {\n  componentDidMount(): void {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (!this.props.initializedSuc) {\n      return <Preloader />;\n    }\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n\n        <NavBar />\n        <div className=\"app-wrapper-content\">\n          <Route\n            path={\"/profile/:userId?\"}\n            render={WithSuspense(ProfileContainer)}\n          />\n\n          <Route\n            path={\"/dialogs\"}\n            render={WithSuspense( DialogsContainer )}\n          />\n\n          <Route\n            path={\"/users\"}\n            render={ WithSuspense( UsersContainer )}\n          />\n\n          <Route\n            path={\"/login\"}\n            render={ WithSuspense(Login) }\n          />\n\n          <Route path={\"/news\"} component={News} />\n          <Route path={\"/music\"} component={Music} />\n          <Route path={\"/settings\"} component={Settings} />\n          <Route path={\"/friends\"} component={Friends} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppRootStateType): mapStateType => ({\n  initializedSuc: state.app.initializedSuc,\n});\n\nexport default compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n","import React from \"react\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter basename = {process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n","import {headerAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {FormDataType} from \"../components/Login/Login\";\r\nimport {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\n// AC type bind\r\nexport const SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\n\r\n//Profile Action Types\r\nexport type AuthActionType =\r\n    ReturnType<typeof setUserData>\r\n\r\n\r\n//types\r\ntype ThunkType = ThunkAction<void, AppRootStateType, unknown, AuthActionType>\r\nexport type AuthInitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    id: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state: AuthInitialStateType = initialState, action: AuthActionType) => {\r\n\r\n    switch (action.type) {\r\n        case  SET_USER_DATA : {\r\n            return {\r\n                ...state, ...action.payload\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n// Action Creators\r\nexport const setUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n} as const);\r\n\r\n\r\n//thunk\r\nexport const setDataUserThunk = () => async (dispatch: Dispatch) => {\r\n    let response = await headerAPI.setDataUser();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setUserData(id, email, login, true))\r\n    }\r\n};\r\nexport const LoginThunk = (formData: FormDataType): ThunkType => async (dispatch: ThunkDispatch<AppRootStateType, unknown, any>) => {\r\n    let res = await headerAPI.login(formData)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setDataUserThunk())\r\n    } else {\r\n        let message = res.data.messages.length > 0 ? res.data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit(\"Login\", {_error: message}));\r\n    }\r\n};\r\n\r\n\r\nexport const LogOutThunk = () => async (dispatch: Dispatch<any>) => {\r\n    let response = await headerAPI.logOut();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false));\r\n        // dispatch(setDataUserThunk())\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","import React from \"react\"\r\nimport load from \"./../../assets/images/grid.svg\"\r\n\r\n\r\n\r\nexport const Preloader = () => {\r\n    return <img src={load} alt={\"loading\"}/>\r\n};\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__21-yI\",\"loginBlock\":\"Header_loginBlock__2hiyZ\"};","import {ProfilePageType} from \"./store\";\r\nimport {ProfileType} from \"../components/Profile/ProfileContainer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\n// AC type bind\r\nexport const ADD_POST = \"ADD-POST\";\r\nexport const SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nexport const SET_USER_STATUS = \"SET_USER_STATUS\";\r\nexport const DELETE_POST = \"DELETE_POST\";\r\n\r\n\r\n//Profile Action Types\r\n\r\nexport type ProfileActionType =\r\n    ReturnType<typeof addPost> |\r\n    ReturnType<typeof setUserProfile> |\r\n    ReturnType<typeof setUserStatus> |\r\n    ReturnType<typeof deletePost>\r\n\r\n//END Profile Action Types\r\n\r\nlet InitialState: ProfilePageType = {\r\n\r\n    postsDate: [\r\n        {id: 1, message: \"Hi, how are you?\", likeCounts: 35},\r\n        {id: 2, message: \"It's my first Post\", likeCounts: 74},\r\n        {id: 3, message: \"beer?\", likeCounts: 3000000},\r\n        {id: 4, message: \"go home\", likeCounts: 22},\r\n        {id: 5, message: \"we live in your dream\", likeCounts: 11}\r\n    ],\r\n    // newPostText: \"hello my dear friends\",\r\n    profile: {} as ProfileType,\r\n    status: \"\"\r\n};\r\n\r\n\r\nconst profileReducer = (state: ProfilePageType = InitialState, action: ProfileActionType) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsDate:\r\n                    [...state.postsDate, {id: 5, message: action.post, likeCounts: 0}]\r\n            };\r\n        case SET_USER_STATUS:\r\n            return {...state, status: action.status};\r\n        case DELETE_POST:\r\n            return {...state, postsDate: state.postsDate.filter(p => p.id !== action.id)};\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile};\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n// Action Creators\r\n\r\nexport const addPost = (post: string) => ({type: ADD_POST, post} as const);\r\nexport const deletePost = (id: number) => ({type: DELETE_POST, id} as const);\r\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile} as const);\r\nexport const setUserStatus = (status: string) => ({type: SET_USER_STATUS, status} as const);\r\n\r\n// end Action Creators\r\n\r\n//Thunks\r\nexport const getUserProfile = (id: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.setUserProfile(id);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n\r\n};\r\nexport const getStatus = (id: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getStatus(id);\r\n\r\n    dispatch(setUserStatus(response.data));\r\n};\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setUserStatus(status));\r\n};\r\n\r\n\r\nexport default profileReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1NyjL\",\"item\":\"Navbar_item__823pX\",\"active\":\"Navbar_active__2Rl1H\",\"ava_friends\":\"Navbar_ava_friends__2NaeI\"};","module.exports = __webpack_public_path__ + \"static/media/grid.272baf8c.svg\";","import axios from \"axios\";\r\nimport {FormDataType} from \"../components/Login/Login\";\r\n\r\nexport type APIResponseType<D = {}, T = ResultCodes> = {\r\n    data: D\r\n    message: string[]\r\n    resultCode: T\r\n}\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"a6426bec-7226-42f8-9744-9ee811f5483e\"\r\n    },\r\n    data: {}\r\n});\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n\r\n    UnFollowUsers(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    FollowUsers(id: number) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    setUserProfile(id: string) {\r\n        return instance.get(`profile/${id}`)\r\n    },\r\n\r\n    getStatus(id: string) {\r\n        return instance.get(`profile/status/${id}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n\r\n};\r\nexport const headerAPI = {\r\n    setDataUser() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(formData: FormDataType) {\r\n\r\n        return instance.post(`auth/login`, formData)\r\n    },\r\n    logOut() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n","import {imgObj, MessagePageType} from \"./store\";\r\n\r\n// AC type bind\r\nexport const ADD_NEW_MESSAGE = \"ADD-NEW-MESSAGE\";\r\n\r\n\r\n// Action Creators\r\nexport const NewMessage = (newMessage:string) => ({type: ADD_NEW_MESSAGE,newMessage} as const);\r\n\r\n// end Action Creators\r\n\r\n//Profile Action Types\r\n\r\nexport type DialogActionType =\r\n    ReturnType<typeof NewMessage>\r\n\r\n\r\n\r\n//END Profile Action Types\r\n\r\nlet initialState: MessagePageType = {\r\n\r\n    dialogsDate: [\r\n        {id: 1, name: \"Phil\", img: imgObj.img1},\r\n        {\r\n            id: 2,\r\n            name: \"Sergo\",\r\n            img: imgObj.img2\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Pavel\",\r\n            img: imgObj.img3\r\n        },\r\n        {\r\n            id: 4, name: \"Denis\", img: imgObj.img4\r\n        },\r\n        {id: 5, name: \"Victor\", img: imgObj.img5},\r\n    ],\r\n    messageDate: [\r\n        {id: 1, message: \"Hello\"},\r\n        {id: 2, message: \"Go eat Shkvarky\"},\r\n        {id: 3, message: \"well done\"},\r\n        {id: 4, message: \"beer?\"},\r\n        {id: 5, message: \"we will go to cinema\"}\r\n    ]\r\n};\r\n\r\n\r\nconst dialogReducer = (state: MessagePageType = initialState, action: DialogActionType ) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageDate: [...state.messageDate,\r\n                    {id: 7, message: action.newMessage}\r\n                ]\r\n            };\r\n    }\r\n    return state\r\n};\r\n\r\n\r\n\r\nexport default dialogReducer;","import {UsersActionTypes} from \"./users-reducer\";\r\nimport {ProfileType} from \"../components/Profile/ProfileContainer\";\r\nimport {DialogActionType} from \"./dialog-reducer\";\r\nimport {ProfileActionType} from \"./profile-reducer\";\r\n\r\nexport const imgObj = {\r\n    img1: \"https://www.meme-arsenal.com/memes/8c4efb9bdbe32514cd7b64ec5e2e1fd1.jpg\",\r\n    img2: \"https://instaved.ru/wp-content/uploads/2019/11/kartinki-na-instagram-na-avu_GLAV.jpg\",\r\n    img3: \"https://proprikol.ru/wp-content/uploads/2020/04/kartinki-dlya-vajbera-na-avu-3.jpg\",\r\n    img4: \"https://klike.net/uploads/posts/2019-03/1551596697_5.jpg\",\r\n    img5: \"https://klike.net/uploads/posts/2019-03/medium/1551512888_2.jpg\"\r\n};\r\n// export type AuthDataType = {\r\n//     id?: number | null\r\n//     email?: string | null\r\n//     login: string | null\r\n//     isAuth: boolean\r\n// }\r\n\r\nexport type AllActionType =\r\n    ProfileActionType\r\n    & DialogActionType\r\n    & UsersActionTypes\r\n\r\n\r\nexport type ProfilePageType = {\r\n    postsDate: Array<PostType>\r\n    profile: ProfileType\r\n    status:string\r\n}\r\nexport type MessagePageType = {\r\n    messageDate: Array<MessageType>\r\n    dialogsDate: Array<DialogType>\r\n}\r\nexport type MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n}\r\nexport type PostType = {\r\n    id: number\r\n    message: string\r\n    likeCounts: number\r\n};\r\n// export type SidebarType = {}\r\n// export type StoreType = {\r\n//     _state: RootStateType\r\n//     _onChange: () => void\r\n//     subscriber: any\r\n//     getState: () => RootStateType\r\n//     dispatch: (action:AllActionType ) => void\r\n// }\r\n\r\n// AC type bind\r\n\r\n\r\n\r\n//Types of action\r\n// Action Creators\r\n//Posts\r\n// export const addPost = () => ({type: ADD_POST} as const);\r\n// export const ChangePost = (newText: string) => ({type: CHANGE_POST_TEXT, newText: newText} as const);\r\n// export const NewMessage = () => ({type: ADD_NEW_MESSAGE} as const);\r\n// export const ChangeMessage = (newMessage: string) => (\r\n//     {type: CHANGE_NEW_MESSAGE, newMessage: newMessage} as const);\r\n//users\r\n// export const follow = (userId: number) => ({type: FOLLOW, userId} as const);\r\n// export const unFollow = (userId: number) => ({type: UNFOLLOW, userId} as const);\r\n// export const setUsers = (users: Array<UsersType>) => ({type: SET_USERS, users} as const);\r\n// export const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const);\r\n// export const setUserTotalCount = (totalCount: number) => ({type: SET_USER_TOTAL_COUNT, totalCount} as const);\r\n// //loading\r\n// export const toogleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const);\r\n// export const toogleIsFollowing = (followingInProgress: boolean, userId:number) =>\r\n//     ({type: TOOGLE_IS_FOLLOWING, followingInProgress, userId} as const);\r\n//profile\r\n// export const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile} as const);\r\n// auth\r\n// export const setUserData = (id: number | null, email: string | null, login: string | null) => ({\r\n//     type: SET_USER_DATA,\r\n//     data: {id, email, login}\r\n// } as const);\r\n\r\n// STORE\r\n\r\n// //store function\r\n//     getState() {\r\n//         return this._state;\r\n//     },\r\n//\r\n//     _onChange() {\r\n//         console.log(\"state was changed\")\r\n//     },\r\n//\r\n//     // subscriber(observ) {\r\n//     //    this._onChange = observ\r\n//     // },\r\n//\r\n//     dispatch(action) {\r\n//\r\n//\r\n//         this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n//         this._state.messagePage = dialogReducer(this._state.messagePage, action);\r\n//         this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n//\r\n//         this._onChange();\r\n//     }\r\n// };\r\n//\r\n//\r\n// export default store;\r\n\r\n\r\n// const store: StoreType = {\r\n//     _state: {\r\n//         profilePage: {\r\n//\r\n//             postsDate: [\r\n//                 {id: 1, message: \"Hi, how are you?\", likeCounts: 35},\r\n//                 {id: 2, message: \"It's my first Post\", likeCounts: 74},\r\n//                 {id: 3, message: \"Жыве Беларусь\", likeCounts: 3000000},\r\n//                 {id: 4, message: \"go home\", likeCounts: 22},\r\n//                 {id: 5, message: \"we live in your dream\", likeCounts: 11}\r\n//             ],\r\n//\r\n//             newPostText: \"hello my dear friends\"\r\n//         },\r\n//\r\n//         messagePage: {\r\n//\r\n//             dialogsDate: [\r\n//                 {id: 1, name: \"Phil\", img: imgObj.img1},\r\n//                 {\r\n//                     id: 2,\r\n//                     name: \"Sergo\",\r\n//                     img: imgObj.img2\r\n//                 },\r\n//                 {\r\n//                     id: 3,\r\n//                     name: \"Pavel\",\r\n//                     img: imgObj.img3\r\n//                 },\r\n//                 {\r\n//                     id: 4, name: \"Denis\", img: imgObj.img4\r\n//                 },\r\n//                 {id: 5, name: \"Victor\", img: imgObj.img5},\r\n//             ],\r\n//             messageDate: [\r\n//                 {id: 1, message: \"Hello\"},\r\n//                 {id: 2, message: \"Go eat Shkvarky\"},\r\n//                 {id: 3, message: \"well done\"},\r\n//                 {id: 4, message: \"beer?\"},\r\n//                 {id: 5, message: \"we will go to cinema\"}\r\n//             ],\r\n//\r\n//             newMessageText: \"\"\r\n//         },\r\n//\r\n//         sidebar: {}\r\n//     },\r\n//\r\n//","import {UsersType} from \"../redux/users-reducer\";\r\n\r\ntype NewObjPropType = {\r\n    followed: boolean\r\n}\r\n\r\n\r\nexport let helperObj = (items: Array<UsersType>, itemId: number, objPropName: string, newOdjProps:NewObjPropType) => {\r\n  return   items.map((u:any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newOdjProps}\r\n        }\r\n        return u\r\n    })\r\n};","import { Dispatch } from \"redux\";\r\nimport { ResultCodes, usersAPI } from \"../api/api\";\r\nimport { BaseThunkType } from \"./redux-store\";\r\nimport { helperObj } from \"../utills/Helper\";\r\n\r\n\r\n// AC type bind\r\nexport const FOLLOW = \"FOLLOW\";\r\nexport const UNFOLLOW = \"UNFOLLOW\";\r\nexport const SET_USERS = \"SET_USERS\";\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nexport const SET_USER_TOTAL_COUNT = \"SET_USER_TOTAL_COUNT\";\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nexport const TOOGLE_IS_FOLLOWING = \"TOOGLE_IS_FOLLOWING \";\r\n\r\n//Types of action\r\nexport type UsersActionTypes =\r\n    ReturnType<typeof unFollowSucsess> |\r\n    ReturnType<typeof followSucsess> |\r\n    ReturnType<typeof setUsers> |\r\n    ReturnType<typeof setCurrentPage> |\r\n    ReturnType<typeof setUserTotalCount> |\r\n    ReturnType<typeof toogleIsFetching> |\r\n    ReturnType<typeof toogleIsFollowing>\r\n\r\n\r\n//types\r\ntype ThunkType = BaseThunkType<UsersActionTypes>\r\nexport type InitialType = {\r\n    users: Array<UsersType>\r\n    pageSize: number,\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    photos: photosType\r\n    name: string\r\n    followed: boolean\r\n    status: string\r\n    // location: LocationType\r\n}\r\ntype photosType = {\r\n    small: string\r\n    large?: string\r\n}\r\n// type LocationType = {\r\n//     city: string\r\n//     country: string\r\n// }\r\n\r\nlet InitialState: InitialType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = InitialState, action: UsersActionTypes) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: helperObj(state.users, action.userId, \"id\", { followed: true })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: helperObj(state.users, action.userId, \"id\", { followed: false })\r\n            }\r\n        }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users };\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage };\r\n        case SET_USER_TOTAL_COUNT:\r\n            return { ...state, totalItemsCount: action.totalCount };\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching };\r\n        case TOOGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n\r\n// Action Creators\r\nexport const followSucsess = (userId: number) => ({ type: FOLLOW, userId } as const);\r\nexport const unFollowSucsess = (userId: number) => ({ type: UNFOLLOW, userId } as const);\r\nexport const setUsers = (users: Array<UsersType>) => ({ type: SET_USERS, users } as const);\r\nexport const setCurrentPage = (currentPage: number) => ({ type: SET_CURRENT_PAGE, currentPage } as const);\r\nexport const setUserTotalCount = (totalCount: number) => ({ type: SET_USER_TOTAL_COUNT, totalCount } as const);\r\n//loading\r\nexport const toogleIsFetching = (isFetching: boolean) => ({ type: TOGGLE_IS_FETCHING, isFetching } as const);\r\nexport const toogleIsFollowing = (followingInProgress: boolean, userId: number) =>\r\n    ({ type: TOOGLE_IS_FOLLOWING, followingInProgress, userId } as const);\r\n\r\n\r\n//Thunk\r\nexport const getUsers = (pageSize: number, currentPage: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toogleIsFetching(true));\r\n    let data = await usersAPI.getUsers(pageSize, currentPage);\r\n\r\n    dispatch(toogleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUserTotalCount(data.totalCount))\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch,\r\n    userId: number,\r\n    apiMethod: (userId: number) => Promise<any>,\r\n    actionCreator: (userId: number) => UsersActionTypes) => {\r\n\r\n    dispatch(toogleIsFollowing(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.resultCode === ResultCodes.Success) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toogleIsFollowing(false, userId))\r\n};\r\n\r\nexport const unFollow = (userId: number): ThunkType => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.UnFollowUsers.bind(usersAPI), unFollowSucsess)\r\n};\r\n\r\nexport const follow = (userId: number): ThunkType => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.FollowUsers.bind(usersAPI), followSucsess)\r\n};\r\n\r\n\r\n\r\n\r\nexport default usersReducer;"],"sourceRoot":""}